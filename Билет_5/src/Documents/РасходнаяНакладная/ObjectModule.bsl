Процедура ОбработкаПроведения(Отказ, Режим)
	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.Взаиморасчеты");
	ЭлементБлокировки.УстановитьЗначение("Контрагент", Контрагент);
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	Блокировка.Заблокировать();

	Движение = Движения.Взаиморасчеты.Добавить();
	Движение.Период = Дата;
	Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
	Движение.Контрагент = Контрагент;
	Движение.Проект = Проект;
	Движение.СуммаРуб = СписокНоменклатуры.Итог("Сумма");
	КурсВалюты = РегистрыСведений.КурсыВалют.ПолучитьПоследнее(Дата, Новый Структура("Валюта", Проект.Валюта));
	Движение.СуммаВал = Движение.СуммаРуб / КурсВалюты.Курс;

	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВзаиморасчетыОстатки.СуммаРубОстаток
	|ИЗ
	|	РегистрНакопления.Взаиморасчеты.Остатки(&Дата, Контрагент = &Контрагент
	|	И Проект = &Проект) КАК ВзаиморасчетыОстатки";

	Запрос.УстановитьПараметр("Дата", Дата);
	Запрос.УстановитьПараметр("Проект", Справочники.Проекты.ПустаяСсылка());
	Запрос.УстановитьПараметр("Контрагент", Контрагент);
	РезультатЗапроса = Запрос.Выполнить();
	Если Не РезультатЗапроса.Пустой() Тогда
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		ВыборкаДетальныеЗаписи.Следующий();

		Движение = Движения.Взаиморасчеты.Добавить();
		Движение.Период = Дата;
		Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
		Движение.Контрагент = Контрагент;
		Движение.СуммаРуб = мин(ВыборкаДетальныеЗаписи.СуммаРубОстаток, СписокНоменклатуры.Итог("Сумма"));

		Движение = Движения.Взаиморасчеты.Добавить();
		Движение.Период = Дата;
		Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
		Движение.Контрагент = Контрагент;
		Движение.Проект = Проект;
		Движение.СуммаРуб = мин(ВыборкаДетальныеЗаписи.СуммаРубОстаток, СписокНоменклатуры.Итог("Сумма"));
		Движение.СуммаВал = Движение.СуммаРуб / КурсВалюты.Курс;
	КонецЕсли;
	Движения.Взаиморасчеты.Записывать = Истина;

	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	РасходнаяНакладнаяСписокНоменклатуры.Номенклатура,
		|	РасходнаяНакладнаяСписокНоменклатуры.ИнвНомер,
		|	РасходнаяНакладнаяСписокНоменклатуры.Сумма
		|ПОМЕСТИТЬ ВремТ
		|ИЗ
		|	Документ.РасходнаяНакладная.СписокНоменклатуры КАК РасходнаяНакладнаяСписокНоменклатуры
		|ГДЕ
		|	РасходнаяНакладнаяСписокНоменклатуры.Ссылка = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВремТ.Номенклатура,
		|	ВремТ.ИнвНомер,
		|	ЕСТЬNULL(УправленческийОстатки.СумамаОстаток, 0) КАК СумамаОстаток,
		|	ЕСТЬNULL(УправленческийОстатки.КоличествоОстаток, 0) КАК КоличествоОстаток,
		|	ВремТ.Сумма
		|ИЗ
		|	ВремТ КАК ВремТ
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Управленческий.Остатки(&Дата, Счет = &Товары, &Субконто, (Субконто1, Субконто2)
		|			В
		|			(ВЫБРАТЬ
		|				ВремТ.Номенклатура,
		|				ВремТ.ИнвНомер
		|			ИЗ
		|				ВремТ КАК ВремТ)) КАК УправленческийОстатки
		|		ПО ВремТ.Номенклатура = УправленческийОстатки.Субконто1
		|		И УправленческийОстатки.Субконто2 = ВремТ.ИнвНомер";
	
	Запрос.УстановитьПараметр("Дата", Дата);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Субконто = новый Массив;
	Субконто.Добавить(ПланыВидовХарактеристик.ВидыСубконто.Номенклатура);
	Субконто.Добавить(ПланыВидовХарактеристик.ВидыСубконто.ИнвНомер);
	Запрос.УстановитьПараметр("Субконто", Субконто);
	Запрос.УстановитьПараметр("Товары", ПланыСчетов.Управленческий.Товары);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Если Выборка.КоличествоОстаток = 0 Тогда
			Отказ=Истина;
			Сообщить("Товара нет");
		КонецЕсли;
		Если Не Отказ Тогда
			Движение = Движения.Управленческий.Добавить();
			Движение.Период = Дата;
			Движение.СчетДт = ПланыСчетов.Управленческий.ПрибылиУбытки;
			Движение.СчетКт = ПланыСчетов.Управленческий.Товары;
			Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконто.Номенклатура]=Выборка.Номенклатура;
			Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконто.ИнвНомер]=Выборка.ИнвНомер;
			Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконто.Подразделение] = Подразделение;
			Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконто.Номенклатура]=Выборка.Номенклатура;
			Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконто.ИнвНомер]=Выборка.ИнвНомер;
			Движение.Количество=1;
			Движение.СумамаДт = Выборка.СумамаОстаток;
			Движение.СумамаКт = Выборка.СумамаОстаток;
			
			Движение = Движения.Управленческий.Добавить();
			Движение.Период = Дата;
			Движение.СчетДт = ПланыСчетов.Управленческий.Покупатели;
			Движение.СчетКт = ПланыСчетов.Управленческий.ПрибылиУбытки;
			Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконто.Номенклатура]=Выборка.Номенклатура;
			Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконто.ИнвНомер]=Выборка.ИнвНомер;
			Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконто.Подразделение] = Подразделение;
			Движение.СумамаДт = Выборка.Сумма;
			Движение.СумамаКт = Выборка.Сумма;
		КонецЕсли;
	КонецЦикла;
	Движения.Управленческий.Записывать = Истина;
	
КонецПроцедуры